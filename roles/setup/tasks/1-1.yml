---
# 1.1.1.1 - Ensure mounting of cramfs filesystems is disabled

- name: 1.1.1.1 - Check if CIS modprobe configuration file exists
  ansible.builtin.stat:
    path: /etc/modprobe.d/CIS.conf
  register: modprobe_1_1_1_1
  tags:
    - level-1
    - 1.1.1.1
    - automated

- name: 1.1.1.1 - Ensure mounting of cramfs filesystems is disabled
  ansible.builtin.copy:
    dest: /etc/modprobe.d/CIS.conf
    content: "install cramfs /bin/true\n"
    owner: root
    group: root
    mode: "0644"
  when: modprobe_1_1_1_1.stat.exists is not defined or not modprobe_1_1_1_1.stat.exists
  tags:
    - level-1
    - 1.1.1.1
    - automated

- name: 1.1.1.1 - Ensure mounting of cramfs filesystems is disabled
  ansible.builtin.lineinfile:
    dest: /etc/modprobe.d/CIS.conf
    regexp: ^install cramfs
    line: install cramfs /bin/true
  when: modprobe_1_1_1_1.stat.exists is defined and modprobe_1_1_1_1.stat.exists
  tags:
    - level-1
    - 1.1.1.1
    - automated

# 1.1.1.2 - Ensure mounting of squashfs filesystems is disabled

- name: 1.1.1.2 - Check if CIS modprobe configuration file exists
  ansible.builtin.stat:
    path: /etc/modprobe.d/CIS.conf
  register: modprobe_1_1_1_2
  tags:
    - level-2
    - 1.1.1.2
    - automated

- name: 1.1.1.2 - Ensure mounting of squashfs filesystems is disabled
  ansible.builtin.copy:
    dest: /etc/modprobe.d/CIS.conf
    content: "install squashfs /bin/true\n"
    owner: root
    group: root
    mode: "0644"
  when: modprobe_1_1_1_2.stat.exists is not defined or not modprobe_1_1_1_2.stat.exists
  tags:
    - level-2
    - 1.1.1.2
    - automated

- name: 1.1.1.2 - Ensure mounting of squashfs filesystems is disabled
  ansible.builtin.lineinfile:
    dest: /etc/modprobe.d/CIS.conf
    regexp: ^install squashfs
    line: install squashfs /bin/true
  when: modprobe_1_1_1_2.stat.exists is defined and modprobe_1_1_1_2.stat.exists
  tags:
    - level-2
    - 1.1.1.2
    - automated

# 1.1.1.3 - Ensure mounting of udf filesystems is disabled

- name: 1.1.1.3 - Check if CIS modprobe configuration file exists
  ansible.builtin.stat:
    path: /etc/modprobe.d/CIS.conf
  register: modprobe_1_1_1_3
  tags:
    - level-1
    - 1.1.1.3
    - automated

- name: 1.1.1.3 - Ensure mounting of udf filesystems is disabled
  ansible.builtin.copy:
    dest: /etc/modprobe.d/CIS.conf
    content: "install udf /bin/true\n"
    owner: root
    group: root
    mode: "0644"
  when: modprobe_1_1_1_3.stat.exists is not defined or not modprobe_1_1_1_3.stat.exists
  tags:
    - level-1
    - 1.1.1.3
    - automated

- name: 1.1.1.3 - Ensure mounting of udf filesystems is disabled
  ansible.builtin.lineinfile:
    dest: /etc/modprobe.d/CIS.conf
    regexp: ^install udf
    line: install udf /bin/true
  when: modprobe_1_1_1_3.stat.exists is defined and modprobe_1_1_1_3.stat.exists
  tags:
    - level-1
    - 1.1.1.3
    - automated

# 1.1.2 Ensure /tmp is configured
# 1.1.3 Ensure noexec option set on /tmp partition
# 1.1.4 Ensure nodev option set on /tmp partition
# 1.1.5 Ensure nosuid option set on /tmp partition
####### The rules above are not applicable since we use
####### autoscaling and AWS it is quite difficult to auto mount after initial boot.

# 1.1.6 Ensure /dev/shm is configured

- name: 1.1.6 - Ensure /dev/shm is configured
  ansible.posix.mount:
    name: /dev/shm
    state: present
    fstype: tmpfs
    src: tmpfs
    opts: defaults,noexec,nodev,nosuid,seclabel
  tags:
    - level-1 - "1.1.6"
    - automated

# 1.1.7 Ensure noexec option set on /dev/shm partition
# 1.1.8 Ensure nodev option set on /dev/shm partition
# 1.1.9 Ensure nosuid option set on /dev/shm partition

- name: 1.1.[7,8,9] - Ensure noexec,nodev,nosuid option set on /dev/shm partition
  ansible.posix.mount:
    name: /dev/shm
    state: present
    fstype: tmpfs
    src: tmpfs
    opts: defaults,noexec,nodev,nosuid,seclabel
  tags:
    - level-1
    - 1.1.7
    - 1.1.8
    - 1.1.9
    - automated

# 1.1.10 Ensure separate partition exists for /var
# 1.1.11 Ensure separate partition exists for /var/tmp
# 1.1.12 Ensure /var/tmp partition includes the noexec option
# 1.1.13 Ensure /var/tmp partition includes the nodev option
# 1.1.14 Ensure /var/tmp partition includes the nosuid option
# 1.1.15 Ensure separate partition exists for /var/log
# 1.1.16 Ensure separate partition exists for /var/log/audit
# 1.1.17 Ensure separate partition exists for /home
# 1.1.18 Ensure /home partition includes the nodev option
######## The rules above are not applicable since we use
######## autoscaling and AWS it is quite difficult to auto mount after initial boot.

# 1.1.19 Ensure removable media partitions include noexec option
# 1.1.20 Ensure nodev option set on removable media partitions
# 1.1.21 Ensure nosuid option set on removable media partitions
######## The rules above are not applicable since AWS EC2 does not use removable media.

# 1.1.22 Ensure sticky bit is set on all world-writable directories

- name: 1.1.22 - Ensure sticky bit is set on all world-writable directories
  ansible.builtin.shell: >-
    set -o pipefail &&
    df --local -P |
    awk '{if (NR!=1) print $6}' |
    xargs -I '{}' find '{}' -xdev -type d
    \( -perm -0002 -a ! -perm -1000 \) 2>/dev/null |
    xargs -I '{}' chmod a+t '{}'
  tags:
    - level-1
    - 1.1.22
    - automated

# 1.1.23 Disable Automounting
- name: 1.1.23 - Disable Automounting
  ansible.builtin.yum:
    name: autofs
    state: absent
  tags:
    - level-1
    - 1.1.23
    - automated

# 1.1.24 Disable USB Storage
######## The rule above is not applicable since AWS EC2 does not use removable media.
