---
# 5.5.1 Set Shadow Password Suite Parameters
# All user specific password policy are enforced in roles/reepay/tasks/ops-users.yml

- name: Get users details
  ansible.builtin.shell: >-
    set -o pipefail && grep -E ^[^:]+:[^\\!*] /etc/shadow |
    cut -d: -f1,3,4,5,6,7
  register: users_details
  # E.g. username:19366:7:90:7:35
  tags:
    - level-1
    - 5.5.1
    - automated

- name: Make list of dicts with user details
  ansible.builtin.set_fact:
    users_details_dict: "{{ users_details_dict | default([]) + [{'username': item.split(':')[0], 'password_last_changed': item.split(':')[1] | int, 'password_min_days':\
      \ item.split(':')[2] | int, 'password_max_days': item.split(':')[3] | int, 'password_warn_days': item.split(':')[4] | int, 'password_inactive_days': item.split(':')[5]\
      \ | int}] }}"
  with_items: "{{ users_details.stdout_lines }}"
  tags:
    - level-1
    - 5.5.1
    - automated
    - skip_ansible_lint

# 5.5.1.1 Ensure password expiration is 90 days or less
- name: 5.5.1.1 - Ensure password expiration is 90 days or less
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: ^PASS_MAX_DAYS
    line: PASS_MAX_DAYS {{ password_expire_max if password_expire_max <= 90 else 90 }}
    state: present
  tags:
    - level-1
    - 5.5.1.1
    - automated

- name: 5.5.1.1 - Ensure password expiration is 90 days or less
  with_items: "{{ users_details_dict }}"
  when: item.password_max_days > 90
  ansible.builtin.fail:
    msg: User {{ item.username }} has password_max_days set to {{ item.password_max_days }}. It should be 90 or less.
  tags:
    - level-1
    - 5.5.1.1
    - automated

# awk -F: '{print $1, $7}' /etc/shadow
# 5.5.1.2 Ensure minimum days between password changes is configured
- name: 5.5.1.2 - Ensure minimum days between password changes is configured
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: ^PASS_MIN_DAYS
    line: PASS_MIN_DAYS {{ password_expire_min if password_expire_min >= 1 else 1 }}
    state: present
  tags:
    - level-1
    - 5.5.1.2
    - automated

- name: 5.5.1.2 - Ensure minimum days between password changes is configured
  with_items: "{{ users_details_dict }}"
  when: item.password_min_days < 1
  ansible.builtin.fail:
    msg: User {{ item.username }} has password_min_days set to {{ item.password_min_days }}. It should be 1 or more.
  tags:
    - level-1
    - 5.5.1.2
    - automated

# 5.5.1.3 Ensure password expiration warning days is 7 or more
- name: 5.5.1.3 - Ensure password expiration warning days is 7 or more
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: ^PASS_WARN_AGE
    line: PASS_WARN_AGE {{ password_expire_warning if password_expire_warning >= 7 else 7 }}
    state: present
  tags:
    - level-1
    - 5.5.1.3
    - automated

- name: 5.5.1.3 - Ensure password expiration warning days is 7 or more
  ansible.builtin.fail:
    msg: User {{ item.username }} has password_warn_days set to {{ item.password_warn_days }}. It should be 7 or more.
  with_items: "{{ users_details_dict }}"
  when: item.password_warn_days < 7
  tags:
    - level-1
    - 5.5.1.3
    - automated

# 5.5.1.4 Ensure inactive password lock is 30 days or less
- name: 5.5.1.4 - Ensure inactive password lock is 30 days or less
  ansible.builtin.command: useradd -D -f {{ password_expire_inactive if password_expire_inactive <= 30 else 30 }}
  tags:
    - level-1
    - 5.5.1.4
    - automated
    - ignore_on_docker

- name: 5.5.1.4 - Ensure inactive password lock is 30 days or less
  ansible.builtin.fail:
    msg: User {{ item.username }} has password_inactive_days set to {{ item.password_inactive_days }}. It should be 30 or less.
  with_items: "{{ users_details_dict }}"
  when: item.password_inactive_days > 30
  tags:
    - level-1
    - 5.5.1.4
    - automated
    - ignore_on_docker

# 5.5.1.5 Ensure all users last password change date is in the past
- name: 5.5.1.5 - Ensure all users last password change date is in the past
  ansible.builtin.shell: >
    set -o pipefail && date -d
    "$(chage -l {{ item.username }} | grep "^Last password change" | cut -d: -f2 | sed "s/^ *//;s/ *$//")"
    +%Y-%m-%d
  register: output
  with_items: "{{ users_details_dict }}"
  tags:
    - level-1
    - 5.5.1.5
    - automated

- name: 5.5.1.5 - Ensure all users last password change date is in the past
  ansible.builtin.fail:
    msg: Some users have a last password change date in the past
  with_items: "{{ output.results }}"
  when: item.stdout > ansible_date_time.date
  tags:
    - level-1
    - 5.5.1.5
    - automated

# 5.5.2 Ensure system accounts are secured
- name: 5.5.2 - Ensure system accounts are secured
  ansible.builtin.script: "{{ item }}"
  check_mode: false
  changed_when: false
  register: audit_5_5_2
  with_items:
    - audit5.2.2-1.sh
    - audit5.2.2-2.sh
  tags:
    - level-1
    - 5.5.2
    - automated
    - ignore_on_docker

- name: 5.5.2 - Ensure system accounts are secured
  # Fail when either of the scripts return an output
  ansible.builtin.fail:
    msg: Some system accounts are not secured
  when: audit_5_5_2.results[0].stdout != "" or audit_5_5_2.results[1].stdout != ""
  tags:
    - level-1
    - 5.5.2
    - automated
    - ignore_on_docker

# 5.5.3 Ensure default group for the root account is GID 0
- name: 5.5.3 - Ensure default group for the root account is GID 0
  ansible.builtin.command: id -g root
  register: output
  failed_when: output.stdout != "0"
  tags:
    - level-1
    - 5.5.3
    - automated

# 5.5.4 Ensure default user shell timeout is configured
- name: 5.5.4 - Ensure default user shell timeout is configured
  ansible.builtin.lineinfile:
    path: /etc/profile
    regexp: ^TMOUT
    line: readonly TMOUT={{ default_user_shell_timeout if default_user_shell_timeout <= 900 else 900 }} ; export TMOUT
    state: present
  tags:
    - level-1
    - 5.5.4
    - automated

- name: Find all files in /etc/profile.d
  ansible.builtin.find:
    paths: /etc/profile.d
    patterns: '*.sh'
  register: profile_d_files
  tags:
    - level-1
    - 5.5.5
    - automated
  
- ansible.builtin.set_fact:
    profile_d_files: "{{ profile_d_files.files | map(attribute='path') | list + ['/etc/profile', '/etc/bashrc'] }}"
  tags:
    - level-1
    - 5.5.5
    - automated

- name: 5.5.5 - Ensure default user umask is configured
  ansible.builtin.replace:
    path: "{{ item }}"
    regexp: 'umask\s[0-9]+$'
    replace: "umask {{ default_umask }}"
  with_items: "{{ profile_d_files }}"
  tags:
    - level-1
    - 5.5.5
    - automated

# 5.5.5 Ensure default user umask is configured
- name: 5.5.5 - Ensure default user umask is configured
  ansible.builtin.lineinfile:
    path: /etc/profile.d/set_umask.sh
    regexp: ^umask
    line: umask {{ default_umask }}
    group: root
    owner: root
    mode: "0644"
    state: present
    create: true
  tags:
    - level-1
    - 5.5.5
    - automated

- name: 5.5.5 - Ensure default user umask is configured
  ansible.builtin.lineinfile:
    path: /etc/login.defs
    regexp: ^{{ item.name }}
    line: "{{ item.name }} {{ item.value }}"
    state: present
  with_items:
    - { name: UMASK, value: "{{ default_umask }}" }
    - { name: USERGROUPS_ENAB, value: "no" }
  tags:
    - level-1
    - 5.5.5
    - automated

# 5.6 Ensure root login is restricted to system console
# Wipe all content of /etc/securetty
- name: 5.6 - Ensure root login is restricted to system console
  ansible.builtin.shell: echo "" > /etc/securetty
  tags:
    - level-1
    - "5.6"
    - manual

# 5.7 Ensure access to the su command is restricted
- name: 5.7 - Ensure access to the su command is restricted
  ansible.builtin.group:
    name: sugroup
    state: present
  tags:
    - level-1
    - "5.7"
    - automated

# Catch everyting that starts with #auth required pam_wheel.so
- name: 5.7 - Ensure access to the su command is restricted
  ansible.builtin.lineinfile:
    path: /etc/pam.d/su
    regexp: ^#auth\s+required\s+pam_wheel.so
    line: auth            required            pam_wheel.so use_uid group=sugroup
    state: present
  tags:
    - level-1
    - "5.7"
    - automated
