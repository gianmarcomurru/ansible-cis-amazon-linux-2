---
# 6.1 System File Permissions
# This section provides guidance on securing aspects of system files and directories.

# 6.1.1 Audit system file permissions
- name: 6.1.1 - Audit system file permissions
  ansible.builtin.command: rpm -Va --nomtime --nosize --nomd5 --nolinkto --noconfig
  register: rpm_va
  ignore_errors: true
  tags:
    - level-2
    - 6.1.1
    - manual
    - ignore_on_docker
    - skip_ansible_lint

- name: 6.1.1 - Audit system file permissions
  ansible.builtin.debug:
    msg: "Some system files might have incorrect permissions: {{ rpm_va.stdout }}"
  when: rpm_va.rc != 0
  tags:
    - level-2
    - 6.1.1
    - manual
    - ignore_on_docker

# 6.1.2 Ensure permissions on /etc/passwd are configured
- name: 6.1.2 - Ensure permissions on /etc/passwd are configured
  ansible.builtin.file:
    path: /etc/passwd
    mode: u-x,g-wx,o-wx
    owner: root
    group: root
  tags:
    - level-1
    - 6.1.2
    - automated

# 6.1.3 Ensure permissions on /etc/passwd- are configured
- name: 6.1.3 - Ensure permissions on /etc/passwd- are configured
  ansible.builtin.file:
    path: /etc/passwd-
    mode: u-x,go-wx
    owner: root
    group: root
  tags:
    - level-1
    - 6.1.3
    - automated

# 6.1.4 Ensure permissions on /etc/shadow are configured
- name: 6.1.4 - Ensure permissions on /etc/shadow are configured
  ansible.builtin.file:
    path: /etc/shadow
    mode: "0000"
    owner: root
    group: root
  tags:
    - level-1
    - 6.1.4
    - automated

# 6.1.5 Ensure permissions on /etc/shadow- are configured
- name: 6.1.5 - Ensure permissions on /etc/shadow- are configured
  ansible.builtin.file:
    path: /etc/shadow-
    mode: "0000"
    owner: root
    group: root
  tags:
    - level-1
    - 6.1.5
    - automated

# 6.1.6 Ensure permissions on /etc/gshadow- are configured
- name: 6.1.6 Ensure permissions on /etc/gshadow- are configured
  ansible.builtin.file:
    path: /etc/gshadow-
    mode: "0000"
    owner: root
    group: root
  tags:
    - level-1
    - 6.1.6
    - automated

# 6.1.7 Ensure permissions on /etc/gshadow are configured
- name: 6.1.7 Ensure permissions on /etc/gshadow are configured
  ansible.builtin.file:
    path: /etc/gshadow
    mode: "0000"
    owner: root
    group: root
  tags:
    - level-1
    - 6.1.7
    - automated

# 6.1.8 Ensure permissions on /etc/group are configured
- name: 6.1.8 - Ensure permissions on /etc/group are configured
  ansible.builtin.file:
    path: /etc/group
    mode: u-x,g-wx,o-wx
    owner: root
    group: root
  tags:
    - level-1
    - 6.1.8
    - automated

# 6.1.9 Ensure permissions on /etc/group- are configured
- name: 6.1.9 - Ensure permissions on /etc/group- are configured
  ansible.builtin.file:
    path: /etc/group-
    mode: u-x,go-wx
    owner: root
    group: root
  tags:
    - level-1
    - 6.1.9
    - automated

# 6.1.10 Ensure no world writable files exist
- name: 6.1.10 - Ensure no world writable files exist
  ansible.builtin.shell: >
    set -o pipefail && df --local -P |
    awk '{if (NR!=1) print $6}' |
    xargs -I '{}' find '{}' -xdev -type f -perm -0002
  register: world_writable_files
  failed_when: world_writable_files.stdout != ""
  tags:
    - level-1
    - 6.1.10
    - automated

# 6.1.11 Ensure no unowned files or directories exist
- name: 6.1.11 - Ensure no unowned files or directories exist
  ansible.builtin.shell: >
    set -o pipefail && df --local -P |
    awk {'if (NR!=1) print $6'} |
    xargs -I '{}' find '{}' -xdev -nouser
  register: unowned_files
  failed_when: unowned_files.stdout != ""
  tags:
    - level-1
    - 6.1.11
    - automated

# 6.1.12 Ensure no ungrouped files or directories exist
- name: 6.1.12 - Ensure no ungrouped files or directories exist
  ansible.builtin.shell: >
    set -o pipefail && df --local -P |
    awk '{if (NR!=1) print $6}' |
    xargs -I '{}' find '{}' -xdev -nogroup
  register: ungrouped_files
  failed_when: ungrouped_files.stdout != ""
  tags:
    - level-1
    - 6.1.12
    - automated

# 6.1.13 Audit SUID executables
- name: 6.1.13 - Audit SUID executables
  ansible.builtin.shell: >
    set -o pipefail && df --local -P |
    awk '{if (NR!=1) print $6}' |
    xargs -I '{}' find '{}' -xdev -type f -perm -4000
  register: suid_files
  tags:
    - level-2
    - 6.1.13
    - manual

- name: 6.1.13 - Audit SUID executables
  ansible.builtin.debug:
    msg: "Verify SUID executables: {{ suid_files.stdout }}"
  tags:
    - level-2
    - 6.1.13
    - manual

# 6.1.14 Audit SGID executables
- name: 6.1.14 - Audit SGID executables
  ansible.builtin.shell: >
    set -o pipefail && df --local -P |
    awk '{if (NR!=1) print $6}' |
    xargs -I '{}' find '{}' -xdev -type f -perm -2000
  register: sgid_files
  tags:
    - level-2
    - 6.1.14
    - manual

- name: 6.1.14 - Audit SGID executables
  ansible.builtin.debug:
    msg: "Verify SGID executables: {{ sgid_files.stdout }}"
  tags:
    - level-2
    - 6.1.14
    - manual
